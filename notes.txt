starting with the dom

we know that html css js are stored in a documnet obhejcet midel all html elememts are accseible as a object and all of them are under documend object 
its like windows for js which is generated by browser itself
for manipulating dom we need to first select the elment then we will be chaging the things that we need to change in the selected object
console.dir(document) used to list the complete document property
there is a property in document element named as all and it is suppose to return a array of all the html elememts you can acces elememts by there indices document.all[index] this is how you cna use it 
also there is a object that is getElementById which is used to return a element by id it will return the elememt in object form [document.getElementById("myid")] if there is no such elememt with this id it will return null
after selecting a element or getting a element you can easily chage / manipulate things 
document.getElementByClassName("myclass") it will return a html collection and then you can acces them by index its like a array so you can do whatever you want is there is nothing with that class name then it will return a empty html collection not null
you can also select elements with the help of tag anem as classname selector it return html collection tags are like p,h1 etc.
we also have something called as quer selector document.querySelector('p') just give it like you use them in css # for id . for class name nothing for tagname they are used to select single element they dont return html collection they return the first element found you can use document.querySelectorAll() for getting the html collection
there are 3 properties to maniputlae content of html innerText , innerHtml , textContent inner text showd only the text visible on screen innerHtml also shows the html markup which tag is used in between textContent shows the hidden text also the way of showing is kind of similar to how text is in index.html
for manipulating attributes we use getter and setter method we will get the element in ele by querySelector then we will do ele.setAttribute('atribute_name','value');
each and every object have a property names as style which we can manipulate as well in js you are suppose to use camelCase instead oh hypehen in css this style property is used to set inline style so it is not preferd to use 
there is a classlist that every obj have obj can have multiple classes we can add , remove , toggle in this classlist .contains is used to check the presence of class in classlist onj.classList.add() this is how to use them inline style has the most prioporty which is greter than the styling done uding css
there are also parents elements and sibling for each and every element not used mych but in case if you wanna use them go study at that point
you can also add elements on html pages using js these are the functions that you can use document.appendChild(elememt) , .append(element) , .prepend(element) , insertAdjacent(where,element) also you can create elemne tusing document.createElement() appendChild for adding a new element append can also be used to add string texts also prepend is ovbious go read for insertadjacent it is used to select position with respect to target dont need to learn thinds jsut refer your notes or mdn refernece
you can also remove element from the html page obj.remove() this is how you can do this

Dom Events : evenets are signals from the user that asks the computer to perform a particular action 
onClick on a button can be dine using inline method as well which is not a good method we will be using proper script.js for it
we just ahve to give function name to the event dont call it there there is also a event for on mouse enter and you can see more on mdn refernce

selector.addEventListener("clcik",function); you can use any functin arrow funciton etc anything

this is also accseible in evenetlisteners you can used this in call back fucniton the this will be pointintng to the object that is calling the addEventListener funciton

keyboard events : there is a default argument in callback funciton that is called as event it is obj that has a lot of properties about the triggerd event majorle there are many events like keyup keydown you can see them from mdn reference in event property there are 2 main properties they are code and key you can also use them 

form events : there are many firm events but the main ine is submit event uou can see more there after that there is also a event to prevent default 
inp.value is used to get the value enterd by the user dont use innerText or innerHtml
there is also a event called as change that is used to detect change generaly used in input or textarea only triggerd when you click out of the screen input event for all small changes 

you know what a stack is all the funciton calls are send onto this stack and they are executed one by one
you can also use breakpoints for debugging you code

js is capable of doing one thing at a time this nature of js is called single threaded nature the issue over here is suppose you are using a api or a database then there could be a delay in response so what you think js should wait in this case but if it waits all other features of js will stop working so for dealing with this we have callbacks in js we can pass those things in callback for which you need to wait set time out is also helpful here how does settimeout work if js is single threaded this is because settimeoue is done by browser which uses multi threaded language like c++ for execution generaly all things are wirking in synchronus manner but when we use things like settimeout we make things asynchronus
callbackHell : lets say that you have a funciton that should be executed n number of times with a delay 1s this can be done using settimeout you ust have to pass the value of time in the timeout function increasing by 1000 , 2000 , 3000 like this but there is a chance that a function execution fails this can happen incase we are using database or api so we need to run this only in the case if the execution is succesful else we will not be doing it other method is we will pass a fucniton that will be calling the next function call if the previous one was succesul but there is one issue here that calls would look like such that it will look like hepp which is very difficult to read and understand promises are the concept that helpus to deal with these issues it is a object that has theree states pending , resolve , reject what they do is clear by there name we can just make all the complex code that was hard to read easy bu using then and catch method
async function : they return a promise it will return a promise with state fulfiled if there is no error if there is a error then it will return in rejected state and there will be error message in the result you can use then and catch on this promise later let a = async()=>{} this is how to use it in arrow funciton 
when we want that a function should be exexuted after the funciton being executed is completed means timeout so for this we use await use try and catch for handling rejections in promises here 
Api : application program interface it is like a waiter that bring a package from the server to us the user what we need basicaly html css js is in the package api that worls on internet are called web api they work on data and also bring json data to us
json data format almost looks like js obj here all the keys are in string format 
api gives json data in string format you have to convert it into js obj using JOSN.parse() JSON.stringify() cinverts obj to string  